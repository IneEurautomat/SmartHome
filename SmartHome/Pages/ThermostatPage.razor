@page "/thermostat"
@using SmartHome.Services
@using static OutdoorTemperatureService
@inject OutdoorTemperatureService OutdoorTemperatureService

<h3>Weather Settings</h3>

<div>
    <h4>Current Settings</h4>
    <!-- Hier kun je je instellingen weergeven -->
    <p>Location: Ghent</p>
    <p>Units: Metric</p>
</div>

<div>
    <h4>Current Weather</h4>
    @if (currentWeather != null)
    {
        <div>
            <p>Temperature: @currentWeather.Temperature?.Metric?.Value ?? "N/A" °C</p>
            <p>Condition: @currentWeather.Weather?[0]?.IconPhrase ?? "N/A"</p>
            <img src="@($"https://developer.accuweather.com/sites/default/files/{currentWeather.Weather?[0]?.Icon:00}-s.png")" alt="Weather icon" />
        </div>
    }
    else
    {
        <p>Loading...</p>
    }
</div>

<div>
    <h4>Daily Forecast</h4>
    @if (dailyForecasts != null)
    {
        <ul>
            @foreach (var forecast in dailyForecasts)
            {
                <li>
                    @forecast.Day: @forecast.Temperature °C
                    <img src="@forecast.IconUrl" alt="Weather icon" />
                </li>
            }
        </ul>
    }
    else
    {
        <p>Loading...</p>
    }
</div>

<div>
    <h4>5-Day Forecast</h4>
    @if (weeklyForecasts != null)
    {
        <ul>
            @foreach (var forecast in weeklyForecasts)
            {
                <li>
                    @forecast.Day: @forecast.Temperature °C
                    <img src="@forecast.IconUrl" alt="Weather icon" />
                </li>
            }
        </ul>
    }
    else
    {
        <p>Loading...</p>
    }
</div>

@code {
    private WeatherResponse currentWeather;
    private List<OutdoorTemperatureService.TemperatureEntry> dailyForecasts;
    private List<OutdoorTemperatureService.TemperatureEntry> weeklyForecasts;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Huidige weerinformatie ophalen
            currentWeather = await OutdoorTemperatureService.GetCurrentWeatherAsync("Ghent");

            // Dagelijkse voorspellingen ophalen
            dailyForecasts = await OutdoorTemperatureService.GetDailyTemperaturesAsync("Ghent");

            // Wekelijkse voorspellingen ophalen
            weeklyForecasts = await OutdoorTemperatureService.GetWeeklyTemperaturesAsync("Ghent");
        }
        catch (Exception ex)
        {
            // Foutafhandeling
            Console.WriteLine($"Error fetching weather data: {ex.Message}");
        }
    }
}
